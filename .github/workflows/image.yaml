name: image
on:
  push:
    branches:
      - 'main'
      - 'sign-images-and-sbom'
jobs:
  push-init-kyverno:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.2.1'

      - name: login to GitHub Container Registry
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      - name: Sign image
        run: |
          (echo -n "${{ secrets.COSIGN_PASSWORD }}" | cosign sign -key <(echo -n "${{ secrets.COSIGN_PRIV }}") --upload=false ghcr.io/shubhampalriwala/kyvernopre:latest) > file.sig
          cat file.sig
          cosign attach signature --signature file.sig ghcr.io/shubhampalriwala/kyvernopre-sigs:latest

      - name: docker images publish
        run: |
          make docker-publish-initContainer

      # - name: Sign image
      #   run: |
      #     KYVERNO_IMAGE_VERSION=$(git describe --match "v[0-9]*")
      #     (echo -n "${{ secrets.COSIGN_PASSWORD }}" | cosign sign -key <(echo -n "${{ secrets.COSIGN_PRIV }}") --upload=false ghcr.io/shubhampalriwala/kyvernopre:${KYVERNO_IMAGE_VERSION}) > file.sig
      #     cat file.sig
      #     cosign attach signature --signature file.sig ghcr.io/shubhampalriwala/kyvernopre:${KYVERNO_IMAGE_VERSION}


  # push-kyverno:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Unshallow
  #       run: git fetch --prune --unshallow

  #     - name: Set up Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: 1.16

  #     - name: Install Cosign
  #       uses: sigstore/cosign-installer@main
  #       with:
  #         cosign-release: 'v1.2.1'

  #     - name: login to GitHub Container Registry
  #       run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #       id: buildx
  #       with:
  #         install: true

  #     - name: docker images publish
  #       run: |
  #         make docker-publish-kyverno

  #     - name: Sign image
  #       run: |
  #         KYVERNO_IMAGE_VERSION=$(git describe --match "v[0-9]*")
  #         (echo -n "${{ secrets.COSIGN_PASSWORD }}" | cosign sign -key <(echo -n "${{ secrets.COSIGN_PRIV }}") --upload=false ghcr.io/shubhampalriwala/kyverno:${KYVERNO_IMAGE_VERSION}) > file.sig
  #         cosign attach signature --signature file.sig ghcr.io/shubhampalriwala/kyverno-sigs:${KYVERNO_IMAGE_VERSION}


  # push-kyverno-cli:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Unshallow
  #       run: git fetch --prune --unshallow

  #     - name: Set up Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: 1.16

  #     - name: Install Cosign
  #       uses: sigstore/cosign-installer@main
  #       with:
  #         cosign-release: 'v1.2.1'

  #     - name: login to GitHub Container Registry
  #       run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #       id: buildx
  #       with:
  #         install: true

  #     - name: docker images publish
  #       run: |
  #         make docker-publish-cli
      
  #     - name: Sign image
  #       run: |
  #         KYVERNO_IMAGE_VERSION=$(git describe --match "v[0-9]*")
  #         echo -n "${{ secrets.COSIGN_PASSWORD }}" | cosign sign -key <(echo -n "${{ secrets.COSIGN_PRIV }}") ghcr.io/shubhampalriwala/kyverno-cli:${KYVERNO_IMAGE_VERSION}
